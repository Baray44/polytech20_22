% GSA code v1.0.
% Generated by Esmat Rashedi, 2009. 
% Adopted from: " E. Rashedi, H. Nezamabadi-pour and S. Saryazdi,
% Modified by: Julio Alberto López Gómez (JulioAlberto.Lopez@uclm.es)
%“GSA: A Gravitational Search Algorithm”, Information sciences, vol. 179,
%no. 13, pp. 2232-2248, 2009."
%
%This function Evaluates the agents. 
function   fitness=evaluateF(X,F_index)
global contador 
[dim,N]=size(X);
for i=1:N 
    L=X(:,i);
    %calculation of objective function
    %For synthetic benchmark functions
    fitness(i) = test_functions(L',F_index,dim)
    %For CEC benchmark functions
    %fitness(i)=feval(benchmark_func(F_index),L');
    %For CEC Real problems
%     if(F_index == 9)
%         f          = @(L)cost_fn(L);
%         fitness(i) = f(L');
%     elseif(F_index == 10)
%         f          = @(L)antennafunccircular(L,[50,120],180,0.5);
%         fitness(i) = f(L');
%     elseif(F_index == 11)
%         f          = @(L) fn_DED_5(L);
%         fitness(i) = f(L');
%     elseif(F_index == 12)
%         f          = @(L) fn_DED_10(L);
%         fitness(i) = f(L');
%     elseif(F_index == 13)
%         f          = @(L) fn_ELD_6(L);
%         fitness(i) = f(L');
%     elseif(F_index == 14)
%         f          = @(L) fn_ELD_13(L);
%         fitness(i) = f(L');
%     elseif(F_index == 15)
%         f          = @(L) fn_ELD_15(L);
%         fitness(i) = f(L');
%     elseif(F_index == 16)
%         f          = @(L) fn_ELD_40(L);
%         fitness(i) = f(L');
%     elseif(F_index == 17)
%         f          = @(L) fn_ELD_140(L);
%         fitness(i) = f(L');
%     elseif(F_index == 18)
%         f          = @(L) fn_HT_ELD_Case_1(L);
%         fitness(i) = f(L');
%     elseif(F_index == 19)
%         f          = @(L) fn_HT_ELD_Case_2(L);
%         fitness(i) = f(L');        
%     elseif(F_index == 20)
%         f          = @(L) fn_HT_ELD_Case_3(L);
%         fitness(i) = f(L');        
%     elseif(F_index == 21)
%         load('cassini2.mat')
%         f          = @(L) cassini2(L,MGADSMproblem);
%         fitness(i) = f(L');
%     elseif(F_index == 22)
%         load('messengerfull.mat')
%         f          = @(L) messengerfull(L,MGADSMproblem);
%         fitness(i) = f(L');
%     else
%         fitness(i) = bench_func(L',F_index);
%     end
     contador = contador + 1;


end